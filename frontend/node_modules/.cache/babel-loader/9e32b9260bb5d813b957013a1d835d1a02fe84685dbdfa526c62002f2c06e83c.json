{"ast":null,"code":"import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon(_ref, ctx) {\n  let {\n    positions,\n    ...options\n  } = _ref;\n  const polygon = new LeafletPolygon(positions, options);\n  return createElementObject(polygon, extendContext(ctx, {\n    overlayContainer: polygon\n  }));\n}, function updatePolygon(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","map":{"version":3,"names":["createElementObject","createPathComponent","extendContext","Polygon","LeafletPolygon","createPolygon","_ref","ctx","positions","options","polygon","overlayContainer","updatePolygon","layer","props","prevProps","setLatLngs"],"sources":["C:/Users/Hajar/Desktop/recommandation-marrakech/node_modules/react-leaflet/lib/Polygon.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon({ positions, ...options }, ctx) {\n    const polygon = new LeafletPolygon(positions, options);\n    return createElementObject(polygon, extendContext(ctx, {\n        overlayContainer: polygon\n    }));\n}, function updatePolygon(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,mBAAmB,EAAEC,aAAa,QAAQ,qBAAqB;AAC7F,SAASC,OAAO,IAAIC,cAAc,QAAQ,SAAS;AACnD,OAAO,MAAMD,OAAO,GAAGF,mBAAmB,CAAC,SAASI,aAAaA,CAAAC,IAAA,EAA4BC,GAAG,EAAE;EAAA,IAAhC;IAAEC,SAAS;IAAE,GAAGC;EAAQ,CAAC,GAAAH,IAAA;EACvF,MAAMI,OAAO,GAAG,IAAIN,cAAc,CAACI,SAAS,EAAEC,OAAO,CAAC;EACtD,OAAOT,mBAAmB,CAACU,OAAO,EAAER,aAAa,CAACK,GAAG,EAAE;IACnDI,gBAAgB,EAAED;EACtB,CAAC,CAAC,CAAC;AACP,CAAC,EAAE,SAASE,aAAaA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAC/C,IAAID,KAAK,CAACN,SAAS,KAAKO,SAAS,CAACP,SAAS,EAAE;IACzCK,KAAK,CAACG,UAAU,CAACF,KAAK,CAACN,SAAS,CAAC;EACrC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}